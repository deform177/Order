// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Order.Infrastructure.Repositories;

namespace Order.Infrastructure.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    partial class OrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Order.Domain.Abstraction.EntityAuditInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CreatedId")
                        .HasColumnType("integer");

                    b.Property<int?>("DeletedId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedId");

                    b.HasIndex("DeletedId");

                    b.HasIndex("UpdatedId");

                    b.ToTable("EntityAuditInfo");
                });

            modelBuilder.Entity("Order.Domain.Abstraction.OperationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("OperationTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("OperatorId")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OperationLog");
                });

            modelBuilder.Entity("Order.Domains.Order.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("Ditails")
                        .HasColumnType("text");

                    b.Property<int>("ExecutorId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsPayment")
                        .HasColumnType("boolean");

                    b.Property<int>("СustomerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Order.Domains.Order.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Balance")
                        .HasColumnType("integer");

                    b.Property<int?>("EntityModificationInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityModificationInfoId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Order.Domain.Abstraction.EntityAuditInfo", b =>
                {
                    b.HasOne("Order.Domain.Abstraction.OperationLog", "Created")
                        .WithMany()
                        .HasForeignKey("CreatedId");

                    b.HasOne("Order.Domain.Abstraction.OperationLog", "Deleted")
                        .WithMany()
                        .HasForeignKey("DeletedId");

                    b.HasOne("Order.Domain.Abstraction.OperationLog", "Updated")
                        .WithMany()
                        .HasForeignKey("UpdatedId");
                });

            modelBuilder.Entity("Order.Domains.Order.User", b =>
                {
                    b.HasOne("Order.Domain.Abstraction.EntityAuditInfo", "EntityModificationInfo")
                        .WithMany()
                        .HasForeignKey("EntityModificationInfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
